/**
 * Controlador del sidebar con un solo bot√≥n toggle en el header
 */

// Estado del sidebar
let sidebarVisible = true;

// Funci√≥n para MOSTRAR/OCULTAR el sidebar (toggle desde el header)
function toggleSidebar() {
    console.log('üéØ toggleSidebar() llamada');
    
    // Verificar que el bot√≥n est√© presente
    const headerButton = document.getElementById('headerSidebarToggle');
    if (headerButton) {
        console.log('‚úÖ Bot√≥n del header encontrado en toggleSidebar');
    } else {
        console.log('‚ùå Bot√≥n del header NO encontrado en toggleSidebar');
        return;
    }
    
    // En dispositivos m√≥viles, abrir el men√∫ m√≥vil en lugar del sidebar
    if (window.innerWidth <= 768) {
        console.log('üì± Dispositivo m√≥vil detectado, abriendo men√∫ m√≥vil');
        console.log('üîç Estado del men√∫ m√≥vil:', window.mobileMenu ? 'inicializado' : 'no inicializado');
        
        // Inicializar el men√∫ m√≥vil si no est√° inicializado
        if (!window.mobileMenu) {
            console.log('üîÑ Inicializando men√∫ m√≥vil...');
            initMobileMenu();
        }
        
        // Verificar que el men√∫ existe
        const menuElement = document.getElementById('mobileMenu');
        console.log('üîç Elemento del men√∫ encontrado:', !!menuElement);
        
        if (menuElement) {
            console.log('üì± Mostrando men√∫ m√≥vil directamente...');
            
            // Usar m√∫ltiples m√©todos para asegurar visibilidad
            menuElement.style.display = 'block';
            menuElement.style.visibility = 'visible';
            menuElement.style.opacity = '1';
            menuElement.style.zIndex = '9999';
            menuElement.classList.add('show');
            menuElement.style.animation = 'slideInUp 0.3s ease-out';
            
            // Mostrar overlay
            const overlay = document.getElementById('mobileMenuOverlay');
            if (overlay) {
                overlay.style.display = 'block';
                overlay.style.zIndex = '9998';
            }
            
            // Bloquear scroll
            document.body.style.overflow = 'hidden';
            
            console.log('‚úÖ Men√∫ m√≥vil mostrado');
            console.log('üîç Estilos aplicados:', {
                display: menuElement.style.display,
                visibility: menuElement.style.visibility,
                opacity: menuElement.style.opacity,
                zIndex: menuElement.style.zIndex,
                classes: menuElement.className
            });
        } else {
            console.error('‚ùå Elemento del men√∫ m√≥vil no encontrado');
        }
        return;
    }
    
    // Comportamiento normal para desktop
    const sidebar = document.getElementById('sidebar');
    const mainContent = document.getElementById('mainContent');
    const body = document.body;
    const toggleIcon = document.getElementById('toggleIcon');
    
    if (!sidebar || !mainContent) {
        console.log('‚ö†Ô∏è Elementos del sidebar no encontrados');
        return;
    }
    
    if (sidebarVisible) {
        // Si est√° visible, ocultarlo
        console.log('‚ùå Ocultando sidebar...');
        body.classList.add('sidebar-hidden');
        sidebarVisible = false;
        
        // Cambiar icono a barras (para indicar que se puede abrir)
        if (toggleIcon) {
            toggleIcon.className = 'fas fa-bars';
        }
        
        // Guardar estado en localStorage
        localStorage.setItem('sidebarVisible', 'false');
        console.log('‚ùå Sidebar ocultado');
    } else {
        // Si est√° oculto, mostrarlo
        console.log('‚úÖ Mostrando sidebar...');
        body.classList.remove('sidebar-hidden');
        sidebarVisible = true;
        
        // Cambiar icono a X (para indicar que se puede cerrar)
        if (toggleIcon) {
            toggleIcon.className = 'fas fa-times';
        }
        
        // Guardar estado en localStorage
        localStorage.setItem('sidebarVisible', 'true');
        console.log('‚úÖ Sidebar mostrado');
    }
    
    console.log('Clases del body:', body.className);
}

// Funci√≥n para restaurar el estado del sidebar
function restoreSidebarState() {
    const sidebar = document.getElementById('sidebar');
    const mainContent = document.getElementById('mainContent');
    const body = document.body;
    const toggleIcon = document.getElementById('toggleIcon');
    
    if (!sidebar || !mainContent) {
        console.log('‚ö†Ô∏è Elementos del sidebar no encontrados, saltando restauraci√≥n de estado');
        return;
    }
    
    const savedState = localStorage.getItem('sidebarVisible');
    
    if (savedState === 'false') {
        // Restaurar estado oculto usando CSS
        body.classList.add('sidebar-hidden');
        sidebarVisible = false;
        
        // Actualizar icono a barras
        if (toggleIcon) {
            toggleIcon.className = 'fas fa-bars';
        }
        
        console.log('üîÑ Estado del sidebar restaurado: oculto');
    } else {
        // Restaurar estado visible (por defecto)
        body.classList.remove('sidebar-hidden');
        sidebarVisible = true;
        
        // Actualizar icono a X
        if (toggleIcon) {
            toggleIcon.className = 'fas fa-times';
        }
        
        console.log('üîÑ Estado del sidebar restaurado: visible');
    }
}

// Funci√≥n para manejar cambios de tama√±o de ventana
function handleResize() {
    const sidebar = document.getElementById('sidebar');
    const mainContent = document.getElementById('mainContent');
    const body = document.body;
    
    if (!sidebar || !mainContent) {
        console.log('‚ö†Ô∏è Elementos del sidebar no encontrados, saltando manejo de resize');
        return;
    }
    
    // En pantallas peque√±as, siempre mostrar el sidebar
    if (window.innerWidth < 768) {
        body.classList.remove('sidebar-hidden');
        sidebarVisible = true;
        console.log('üì± Pantalla peque√±a: sidebar siempre visible');
    } else {
        // En pantallas medianas y grandes, restaurar el estado guardado
        restoreSidebarState();
    }
}

// Funci√≥n para verificar si el sidebar est√° visible
function isSidebarVisible() {
    return sidebarVisible;
}

// Funci√≥n para obtener el estado actual
function getSidebarState() {
    return {
        visible: sidebarVisible,
        bodyClasses: document.body.className,
        windowWidth: window.innerWidth
    };
}

// Inicializar cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', () => {
    console.log('üéØ Sidebar toggle inicializado con bot√≥n √∫nico');
    
    // Verificar que el bot√≥n est√© presente
    const headerButton = document.getElementById('headerSidebarToggle');
    const toggleIcon = document.getElementById('toggleIcon');
    
    if (headerButton) {
        console.log('‚úÖ Bot√≥n del header encontrado:', headerButton);
        console.log('üìç Posici√≥n del bot√≥n:', headerButton.offsetLeft, headerButton.offsetTop);
        console.log('üìè Dimensiones del bot√≥n:', headerButton.offsetWidth, headerButton.offsetHeight);
        console.log('üé® Clases del bot√≥n:', headerButton.className);
        console.log('üëÅÔ∏è Estilo display:', window.getComputedStyle(headerButton).display);
        console.log('üëÅÔ∏è Estilo visibility:', window.getComputedStyle(headerButton).visibility);
        console.log('üëÅÔ∏è Estilo opacity:', window.getComputedStyle(headerButton).opacity);
    } else {
        console.log('‚ùå Bot√≥n del header NO encontrado');
    }
    
    if (toggleIcon) {
        console.log('‚úÖ Icono del toggle encontrado:', toggleIcon);
        console.log('üé® Clases del icono:', toggleIcon.className);
    } else {
        console.log('‚ùå Icono del toggle NO encontrado');
    }
    
    // Esperar un poco para asegurar que todos los elementos est√©n cargados
    setTimeout(() => {
        // Restaurar estado guardado
        restoreSidebarState();
        
        // Agregar listener para cambios de tama√±o de ventana
        window.addEventListener('resize', handleResize);
        
        // Verificar estado inicial
        console.log('Estado inicial del sidebar:', sidebarVisible ? 'visible' : 'oculto');
        console.log('üîò Bot√≥n del header: toggle para mostrar/ocultar sidebar');
        
        // Verificar estado final del bot√≥n
        if (headerButton) {
            console.log('üîç Estado final del bot√≥n:');
            console.log('- Display:', window.getComputedStyle(headerButton).display);
            console.log('- Visibility:', window.getComputedStyle(headerButton).visibility);
            console.log('- Opacity:', window.getComputedStyle(headerButton).opacity);
            console.log('- Z-index:', window.getComputedStyle(headerButton).zIndex);
        }
    }, 100);
});

// Funci√≥n para cerrar el men√∫ m√≥vil
function closeMobileMenu() {
    console.log('üîí Cerrando men√∫ m√≥vil...');
    
    const menuElement = document.getElementById('mobileMenu');
    const overlay = document.getElementById('mobileMenuOverlay');
    
    if (menuElement) {
        menuElement.style.animation = 'slideOutDown 0.3s ease-in';
        menuElement.classList.remove('show');
        
        setTimeout(() => {
            menuElement.style.display = 'none';
            menuElement.style.visibility = 'hidden';
            menuElement.style.opacity = '0';
            menuElement.style.animation = '';
        }, 300);
    }
    
    if (overlay) {
        overlay.style.display = 'none';
    }
    
    // Restaurar scroll
    document.body.style.overflow = '';
    
    console.log('‚úÖ Men√∫ m√≥vil cerrado');
}

// Exportar funciones para uso global
window.toggleSidebar = toggleSidebar;
window.restoreSidebarState = restoreSidebarState;
window.isSidebarVisible = isSidebarVisible;
window.getSidebarState = getSidebarState;
window.closeMobileMenu = closeMobileMenu;
